import numpy as np
import camb
from matplotlib import pyplot as plt
import time


def get_spectrum(pars,lmax=2000):
    #print('pars are ',pars)
    H0=pars[0]
    ombh2=pars[1]
    omch2=pars[2]
    tau=pars[3]
    As=pars[4]
    ns=pars[5]
    pars=camb.CAMBparams()
    pars.set_cosmology(H0=H0,ombh2=ombh2,omch2=omch2,mnu=0.06,omk=0,tau=tau)
    pars.InitPower.set_params(As=As,ns=ns,r=0)
    pars.set_for_lmax(lmax,lens_potential_accuracy=0)
    results=camb.get_results(pars)
    powers=results.get_cmb_power_spectra(pars,CMB_unit='muK')
    cmb=powers['total']
    tt=cmb[:,0]    #you could return the full power spectrum here if you wanted to do say EE
    return tt

pars=np.asarray([65,0.02,0.1,0.05,2e-9,0.96])

## Solve for chi^2
##chi^2 =(x-Am)^T N^-1 (x-Am)
def matrix_A(x, order):
    A = np.zeros([len(x), order+1])
    A[:,0] = 1
    for i in range(order):
        A[:,i+1] = x*A[:,i]
    return A
    

x = np.array(get_spectrum(pars))
cmb = x[2:]

##Solve for m first
A = matrix_A(cmb, 6)
N = np.eye(len(cmb))
Ninv = np.linalg.inv(N)
lhs = A.transpose()@(Ninv@A)
rhs = A.transpose()@(Ninv@cmb)
m = np.linalg.inv(lhs)@rhs
d = A@m
##Solve for chi^2 now 
B = (cmb - d)
chisq = B.transpose()@Ninv@B
print(chisq)

plt.plot(cmb, '*')
plt.plot(d, '.')
plt.show()
